<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>Basic skeleton</title>
		<script src="../../js/three.js"></script>
		<script src="../../js/jquery-3.4.1.min.js"></script>
		<style>
			body{
				margin: 0;
				overflow: hidden;
			}
		</style>
	</head>
	<body>
		<div id="WebGL=output">
			
		</div>
		<script>
			function init(){
				//构建场景
				var scene = new THREE.Scene();
				//构建相机
				var camera = new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);
				//构建渲染器
				var renderer = new THREE.WebGLRenderer();
				//渲染背景颜色,用setClearColorHex会报错
				renderer.setClearColor(0xEEEEEE);
				//渲染尺寸
				renderer.setSize(window.innerWidth,window.innerHeight);
				//添加坐标
				var axes = new THREE.AxisHelper(20);
				scene.add(axes);
				//构建60×20的平面,平分高/宽的份数？
				var planeGeometry = new THREE.PlaneGeometry(60,20,1,1);
				//平面材质:颜色
				var planeMaterial = new THREE.MeshBasicMaterial({color:0xcccccc});
				//由尺寸和材质构建一个平面
				var plane = new THREE.Mesh(planeGeometry,planeMaterial);
				//平面选择-90°
				plane.rotation.x = -0.5*Math.PI;
				//平面位置
				plane.position.x = 15
				plane.position.y = 0
				plane.position.z = 0
				//将平面加入到场景中
				scene.add(plane);
				//建立一个立方体
				//正方体的长宽高
				var cubeGeometry = new THREE.BoxGeometry(4,4,4)
				//正方体材质:颜色;使用框线模式显示:是
				var cubeMaterial = new THREE.MeshBasicMaterial({color:0xff0000,wireframe:true});
				//用给定的尺寸与材质构建正方体
				var cube = new THREE.Mesh(cubeGeometry,cubeMaterial);
				//指定立方体的位置
				cube.position.x = -4;
				cube.position.y = 3;
				cube.position.z = 0;
				//将该立方体加入到场景
				scene.add(cube);
				//建立一个球体
				//球体的尺寸与网格密度
				var sphereGeometry = new THREE.SphereGeometry(4,20,20);
				//材质:颜色;使用框线模式显示:是
				var sphereMaterial = new THREE.MeshBasicMaterial({color:0x7777ff,wireframe:true});
				//用给定的尺寸与材质建立球体
				var sphere = new THREE.Mesh(sphereGeometry,sphereMaterial);
				//指定球体的位置
				sphere.position.x = 20;
				sphere.position.y = 4;
				sphere.position.z = 2;
				//将该球体加入到场景
				scene.add(sphere);
				//指定相机位置与方向
				camera.position.x = -30;
				camera.position.y = 40;
				camera.position.z = 30;
				camera.lookAt(scene.position);
				
				document.getElementById("WebGL=output").appendChild(renderer.domElement);
				renderer.render(scene,camera);
			};
			window.onload = init;
		</script>
	</body>
</html>
